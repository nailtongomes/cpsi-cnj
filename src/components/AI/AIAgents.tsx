import React, { useState, useEffect } from 'react';
import { UserProfile } from '../../types';
import { Bot, Heart, Scale, Users, Clock, MessageCircle } from 'lucide-react';

interface AIAgent {
  id: string;
  name: string;
  personality: string;
  specialization: string;
  icon: string;
  description: string;
  response_style: string;
  suitable_for: UserProfile[];
  greeting: string;
  sample_responses: string[];
}

interface AIAgentsProps {
  userProfile: UserProfile;
  onAgentSelect: (agent: AIAgent) => void;
  currentChannel: string;
}

const aiAgents: AIAgent[] = [
  {
    id: 'sofia_emp√°tica',
    name: 'Sofia - Assistente Emp√°tica',
    personality: 'Calorosa, paciente e compreensiva',
    specialization: 'Atendimento a cidad√£os em situa√ß√£o vulner√°vel',
    icon: 'üíô',
    description: 'Especializada em acolher pessoas em momentos dif√≠ceis, com linguagem simples e tom afetuoso.',
    response_style: 'Linguagem muito simples, tons carinhosos, explica√ß√µes passo-a-passo',
    suitable_for: ['cidadao'],
    greeting: 'Ol√°, querido(a)! Eu sou a Sofia e estou aqui para te ajudar com muito carinho. Me conta o que voc√™ precisa?',
    sample_responses: [
      'Sei que pode ser dif√≠cil entender essas quest√µes jur√≠dicas, mas vou te explicar de forma bem simples...',
      'N√£o se preocupe, vamos resolver isso juntos. Voc√™ n√£o est√° sozinho(a) nessa situa√ß√£o...',
      'Entendo sua preocupa√ß√£o. Vou te orientar passo a passo para que tudo fique mais claro...'
    ]
  },
  {
    id: 'carlos_t√©cnico',
    name: 'Dr. Carlos - Consultor Jur√≠dico',
    personality: 'Preciso, t√©cnico e respeitoso',
    specialization: 'Atendimento a advogados e profissionais do direito',
    icon: '‚öñÔ∏è',
    description: 'Foco em quest√µes t√©cnicas, jurisprud√™ncia e procedimentos para profissionais da √°rea.',
    response_style: 'Linguagem t√©cnica apropriada, refer√™ncias jur√≠dicas, objetividade',
    suitable_for: ['advogado'],
    greeting: 'Bom dia, colega. Sou o Dr. Carlos, consultor jur√≠dico especializado em procedimentos judiciais. Como posso auxili√°-lo?',
    sample_responses: [
      'Conforme o Art. 219 do CPC/2015, para a cita√ß√£o por mandado, observe os requisitos do Art. 250...',
      'A jurisprud√™ncia consolidada do STJ no REsp 1.xxx.xxx estabelece que...',
      'Para o protocolo eletr√¥nico no PJe, recomendo verificar o Manual de Procedimentos da Resolu√ß√£o CNJ n¬∫...'
    ]
  },
  {
    id: 'ana_administrativa',
    name: 'Ana - Especialista Processual',
    personality: 'Organizada, eficiente e did√°tica',
    specialization: 'Apoio a servidores da justi√ßa e gest√£o processual',
    icon: 'üèõÔ∏è',
    description: 'Focada em rotinas administrativas, fluxos processuais e organiza√ß√£o judici√°ria.',
    response_style: 'Did√°tica, com foco em processos e procedimentos internos',
    suitable_for: ['servidor'],
    greeting: 'Ol√°! Sou a Ana, especialista em gest√£o processual. Estou aqui para otimizar seus procedimentos administrativos.',
    sample_responses: [
      'Para agilizar o fluxo deste tipo de processo, recomendo seguir o protocolo estabelecido no Manual...',
      'Baseado nos indicadores de produtividade, sugiro priorizar os processos com prazo em...',
      'O sistema registra que voc√™ pode otimizar esse procedimento seguindo estas etapas...'
    ]
  },
  {
    id: 'roberto_senior',
    name: 'Sr. Roberto - Consultor S√™nior',
    personality: 'Experiente, conselheiro e respeitoso',
    specialization: 'Casos complexos e orienta√ß√£o estrat√©gica',
    icon: 'üë®‚Äç‚öñÔ∏è',
    description: 'Para situa√ß√µes que exigem experi√™ncia e an√°lise estrat√©gica aprofundada.',
    response_style: 'Tom respeitoso, an√°lises contextualizadas, vis√£o estrat√©gica',
    suitable_for: ['cidadao', 'advogado', 'servidor'],
    greeting: 'Boa tarde. Sou o Sr. Roberto, consultor s√™nior com 30 anos de experi√™ncia na Justi√ßa. Vamos analisar sua situa√ß√£o com cuidado.',
    sample_responses: [
      'Com base na minha experi√™ncia, casos similares ao seu geralmente seguem este caminho...',
      'Considerando o contexto mais amplo, recomendo uma abordagem estrat√©gica que contemple...',
      'Na minha an√°lise, os precedentes indicam que a melhor estrat√©gia seria...'
    ]
  },
  {
    id: 'marina_jovem',
    name: 'Marina - Assistente Digital',
    personality: 'Din√¢mica, moderna e acess√≠vel',
    specialization: 'Tecnologia, inova√ß√£o e atendimento √°gil',
    icon: 'üöÄ',
    description: 'Especializada em solu√ß√µes digitais, linguagem moderna e atendimento r√°pido.',
    response_style: 'Linguagem atual, foco em efici√™ncia, solu√ß√µes digitais',
    suitable_for: ['cidadao', 'advogado'],
    greeting: 'Oi! üëã Eu sou a Marina, sua assistente digital! Vamos resolver isso de forma r√°pida e moderna?',
    sample_responses: [
      'Posso te ajudar a resolver isso super r√°pido! Vou te mandar um link direto para...',
      'Que tal usarmos o app do tribunal? √â muito mais pr√°tico e voc√™ acompanha tudo em tempo real...',
      'Criei um checklist personalizado para voc√™. Quer que eu envie no seu WhatsApp?'
    ]
  }
];

const AIAgents: React.FC<AIAgentsProps> = ({ userProfile, onAgentSelect, currentChannel }) => {
  const [selectedAgent, setSelectedAgent] = useState<AIAgent | null>(null);
  const [showComparison, setShowComparison] = useState(false);

  // Auto-select best agent for profile
  useEffect(() => {
    const suitableAgents = aiAgents.filter(agent => 
      agent.suitable_for.includes(userProfile)
    );
    
    if (suitableAgents.length > 0 && !selectedAgent) {
      const defaultAgent = suitableAgents[0];
      setSelectedAgent(defaultAgent);
      onAgentSelect(defaultAgent);
    }
  }, [userProfile, selectedAgent, onAgentSelect]);

  const handleAgentChange = (agent: AIAgent) => {
    setSelectedAgent(agent);
    onAgentSelect(agent);
  };

  const getChannelContext = () => {
    switch (currentChannel) {
      case 'phone':
        return 'Liga√ß√£o Telef√¥nica';
      case 'whatsapp':
        return 'WhatsApp';
      case 'widget':
        return 'Chat Web';
      case 'totem':
        return 'Totem';
      default:
        return 'Chat';
    }
  };

  if (showComparison) {
    return (
      <div className="bg-white border-2 border-purple-200 rounded-lg p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-xl font-bold text-purple-800 flex items-center gap-2">
            <Bot size={24} />
            Compara√ß√£o de Agentes IA
          </h3>
          <button
            onClick={() => setShowComparison(false)}
            className="text-gray-500 hover:text-gray-700"
          >
            ‚úï
          </button>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 max-h-96 overflow-y-auto">
          {aiAgents
            .filter(agent => agent.suitable_for.includes(userProfile))
            .map((agent) => (
              <div
                key={agent.id}
                className={`border-2 rounded-lg p-4 cursor-pointer transition-all ${
                  selectedAgent?.id === agent.id
                    ? 'border-blue-500 bg-blue-50'
                    : 'border-gray-200 hover:border-blue-300'
                }`}
                onClick={() => handleAgentChange(agent)}
              >
                <div className="text-center mb-3">
                  <div className="text-3xl mb-2">{agent.icon}</div>
                  <h4 className="font-bold text-lg">{agent.name}</h4>
                  <p className="text-sm text-gray-600">{agent.personality}</p>
                </div>
                
                <div className="space-y-2 text-xs">
                  <p><strong>Especializa√ß√£o:</strong> {agent.specialization}</p>
                  <p><strong>Estilo:</strong> {agent.response_style}</p>
                </div>

                <div className="mt-3 p-2 bg-gray-50 rounded text-xs">
                  <p className="font-medium mb-1">Exemplo de resposta:</p>
                  <p className="italic text-gray-700">"{agent.sample_responses[0]}"</p>
                </div>
              </div>
            ))}
        </div>

        <div className="mt-4 text-center">
          <button
            onClick={() => setShowComparison(false)}
            className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700"
          >
            Confirmar Sele√ß√£o
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-gradient-to-r from-purple-50 to-blue-50 border-2 border-purple-200 rounded-lg p-4">
      <div className="flex items-center justify-between mb-3">
        <div className="flex items-center gap-2">
          <Bot className="text-purple-600" size={20} />
          <span className="font-bold text-purple-800">Agente IA Selecionado</span>
          <span className="text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded-full">
            {getChannelContext()}
          </span>
        </div>
        <button
          onClick={() => setShowComparison(true)}
          className="text-xs bg-white text-purple-600 px-3 py-1 rounded-full hover:bg-purple-50 border border-purple-200"
        >
          Trocar Agente
        </button>
      </div>

      {selectedAgent && (
        <div className="flex items-start gap-3">
          <div className="text-2xl">{selectedAgent.icon}</div>
          <div className="flex-1">
            <div className="flex items-center gap-2 mb-1">
              <h4 className="font-bold text-gray-800">{selectedAgent.name}</h4>
              <span className="text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full">
                Recomendado para voc√™
              </span>
            </div>
            <p className="text-sm text-gray-600 mb-2">{selectedAgent.description}</p>
            
            <div className="bg-white p-3 rounded-lg border border-purple-100">
              <p className="text-sm font-medium text-purple-800 mb-1">Mensagem de boas-vindas:</p>
              <p className="text-sm italic text-gray-700">"{selectedAgent.greeting}"</p>
            </div>

            <div className="flex gap-2 mt-2 text-xs">
              <span className="flex items-center gap-1 text-gray-600">
                <Heart size={12} />
                {selectedAgent.personality}
              </span>
              <span className="flex items-center gap-1 text-gray-600">
                <Scale size={12} />
                {selectedAgent.specialization.substring(0, 30)}...
              </span>
            </div>
          </div>
        </div>
      )}

      <div className="mt-3 pt-3 border-t border-purple-100">
        <div className="flex items-center justify-between text-xs text-gray-600">
          <div className="flex items-center gap-4">
            <span className="flex items-center gap-1">
              <Users size={12} />
              {aiAgents.filter(a => a.suitable_for.includes(userProfile)).length} agentes dispon√≠veis
            </span>
            <span className="flex items-center gap-1">
              <Clock size={12} />
              Resposta em ~2s
            </span>
          </div>
          <div className="flex items-center gap-1">
            <MessageCircle size={12} />
            IA Humanizada CNJ
          </div>
        </div>
      </div>
    </div>
  );
};

export default AIAgents;